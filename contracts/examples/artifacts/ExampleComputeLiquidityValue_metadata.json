{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "factory_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenB",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityAmount",
						"type": "uint256"
					}
				],
				"name": "getGasCostOfGetLiquidityValueAfterArbitrageToPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidityAmount",
						"type": "uint256"
					}
				],
				"name": "getLiquidityValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenAAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenBAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenB",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityAmount",
						"type": "uint256"
					}
				],
				"name": "getLiquidityValueAfterArbitrageToPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenAAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenBAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "truePriceTokenB",
						"type": "uint256"
					}
				],
				"name": "getReservesAfterArbitrage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "reserveA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveB",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/examples/ExampleComputeLiquidityValue.sol": "ExampleComputeLiquidityValue"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 800
		},
		"remappings": []
	},
	"sources": {
		"@uniswap/lib/contracts/libraries/Babylonian.sol": {
			"keccak256": "0xeb1c2a281a00f4660775f75ccfa1e51fbe1d75f86aeb9d0d297151ecdb900177",
			"urls": [
				"bzz-raw://68515f0265381bddfb1d1356ea10ce4e5784276fc09f197fcdcedfa5c75cc069",
				"dweb:/ipfs/QmXWVVPnuJwRUAu3Qpu1s7Fyc5WPQxmZPczVEe5cJ5wVHZ"
			]
		},
		"@uniswap/lib/contracts/libraries/FullMath.sol": {
			"keccak256": "0xc4ffcf28169f73fc9fdd1f82345d6d4fcccf3fd5aea83c133437c25e4e0950a9",
			"urls": [
				"bzz-raw://c9257a47501005f0a648bc4801ef4abc33843681aaf03a6d0c43d46b69e37407",
				"dweb:/ipfs/QmciHvDrqhxs5fjsrm9aNq29FZXpunMn17n2wWj83Zsh3B"
			]
		},
		"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891",
			"urls": [
				"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389",
				"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt"
			]
		},
		"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b",
			"urls": [
				"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf",
				"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH"
			]
		},
		"contracts/examples/ExampleComputeLiquidityValue.sol": {
			"keccak256": "0xc70af863cdd1802863ff7a8ce4b119c4ec0294856a37c211884c626e1dda29fc",
			"urls": [
				"bzz-raw://50b042c2d0bcb845234e81601e4e4072f6ac6fcb8289650f6f4efeaf0d791c63",
				"dweb:/ipfs/QmNfZ7JALnHArVPdB4bQZvdzbdEDBciXp6R9c9XZuv1SFd"
			]
		},
		"contracts/libraries/RelicswapV1Library.sol": {
			"keccak256": "0x0d8f2740d53779bd16c4e42bcb3721a2ab1f4234c6ca82f1dae7a016dec1a605",
			"urls": [
				"bzz-raw://fd14ee349c2e5c371d367c215a29153bb5b1ae671ae7251c9811db0336d32758",
				"dweb:/ipfs/QmSXErJkk7XmZpCNc2LYvTHtM2xL7eSdkoPzaFjjBp22YA"
			]
		},
		"contracts/libraries/RelicswapV1LiquidityMathLibrary.sol": {
			"keccak256": "0x62c715d45533ba99c811a93dc92bf39c7bd9dc473981b677674ecc92d5401d79",
			"urls": [
				"bzz-raw://29fc1845a2f8cac54b879f6a9b1d38ea4bd69b05166ffb3592a2fcf4264f5247",
				"dweb:/ipfs/QmbyFretkdnbcPkrMS8jKJXnATZ6qPRk56tccJ2uzkR38U"
			]
		},
		"contracts/libraries/SafeMath.sol": {
			"keccak256": "0x27f0ea82f879b3b01387b583e6d9d0ec858dca3b22b0aad173f8fbda06e761e1",
			"urls": [
				"bzz-raw://0db9cf37793eb7035f0bfced36323d240f0212150009c39a3a108701d9b50b6c",
				"dweb:/ipfs/QmUAdiG9XNcieXkKfiMB49zQqD34FbXFE15csV2KQzwEqg"
			]
		}
	},
	"version": 1
}